@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<link rel="stylesheet" href="css/LayoutStyle.css" />

<div class="page">

    @if (GetMenuSection(NavigationManager.Uri) == "crud")
    {
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <main>
        <div class="header-container d-flex align-items-center position-relative">
            <div class="logo-container">
                <NavLink class="nav-link d-flex align-items-center" href="/">
                    <img src="/images/datacare.png" alt="Logo" class="logo" />
                </NavLink>
            </div>
            <div class="top-row px-4 d-flex align-items-center">
                <a class="mainMenuOption" href="/crud/capteurs">Gestion CRUD</a>
                <a class="mainMenuOption" href="/grafana">Grafana</a>
                <a class="mainMenuOption" href="/alarme">Alarme</a>
                <a class="mainMenuOption" href="/visu3D">Visualisation 3D</a>
            </div>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    /// <summary>
    /// Permet de récupérer le menu source. Exemple: /crud/batiment retourne crud ou /grafana retourne grafana.
    /// </summary>
    /// <param name="uri">URL à vérifier</param>
    /// <returns>Le premier élément</returns>
    private String? GetMenuSection(String? uri)
    {
        if (String.IsNullOrEmpty(uri))
        {
            throw new ArgumentNullException("L'URL fourni est incorrect");
        }

        String relativePath = NavigationManager.ToBaseRelativePath(uri);
        String[] segments = relativePath.Split('/', StringSplitOptions.RemoveEmptyEntries);
        return segments.Length > 0 ? segments[0] : String.Empty;
    }
}

