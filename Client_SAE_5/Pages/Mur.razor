@page "/murs"
@using Client_SAE_5.Models
@inject MurViewModel MurViewModel

<PageTitle>Liste des Murs</PageTitle>

<h1>Liste des Murs</h1>

@if (MurViewModel.Murs == null || MurViewModel.Salles == null || MurViewModel.Directions == null)
{
    <p><em>Chargement...</em></p>
}
else if (MurViewModel.Salles.Count == 0 || MurViewModel.Directions.Count == 0)
{
    <p><em>Aucune salles ou de directions disponible.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Longueur</th>
                <th>Hauteur</th>
                <th>Orientation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mur in MurViewModel.Murs)
            {
                <tr>
                    <td>@mur.IdMur</td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <input @bind="mur.Longueur" />
                        }
                        else
                        {
                            <span>@mur.Longueur</span>
                        }
                    </td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <input type="number" @bind="mur.Hauteur" />
                        }
                        else
                        {
                            <span>@mur.Hauteur</span>
                        }
                    </td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <input type="number" @bind="mur.Orientation" />
                        }
                        else
                        {
                            <span>@mur.Orientation</span>
                        }
                    </td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <select @bind="mur.IdSalle">
                                @foreach (var salle in MurViewModel.Salles)
                                {
                                    <option value="@salle.IdSalle">@salle.NomSalle</option>
                                }
                            </select>
                        }
                        else
                        {
                            <span>@MurViewModel.Salles.FirstOrDefault(m => m.IdSalle == mur.IdSalle)?.NomSalle</span>
                        }
                    </td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <select @bind="mur.IdDirection">
                                @foreach (var direction in MurViewModel.Directions)
                                {
                                    <option value="@direction.IdDirection">@direction.LettreDirection</option>
                                }
                            </select>
                        }
                        else
                        {
                            <span>@MurViewModel.Directions.FirstOrDefault(t => t.IdDirection == mur.IdDirection)?.LettreDirection</span>
                        }
                    </td>
                    <td>
                        @if (mur.IsEditable)
                        {
                            <button class="btn btn-success" @onclick="() => SavePage(mur)">Valider</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" @onclick="() => EditPage(mur)">Modifier</button>
                        }
                        <button class="btn btn-danger" @onclick="() => DeletePage(mur.IdMur)">Supprimer</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Ajouter un nouveau mur</h2>
    <div>
        <input type="text" @bind="MurViewModel.NewMur.Longueur" placeholder="Longueur du mur" />
        <input type="text" @bind="MurViewModel.NewMur.Hauteur" placeholder="Hauteur du mur" />
        <input type="text" @bind="MurViewModel.NewMur.Orientation" placeholder="Orientation du mur (°)" />
        <select @bind="MurViewModel.NewMur.IdSalle">
            @foreach (var salle in MurViewModel.Salles)
            {
                <option value="@salle.IdSalle">@salle.NomSalle</option>
            }
        </select>
        <select @bind="MurViewModel.NewMur.IdDirection">
            @foreach (var direction in MurViewModel.Directions)
            {
                <option value="@direction.IdDirection">@direction.LettreDirection</option>
            }
        </select>
        <button class="btn btn-primary" @onclick="AddPage">Ajouter</button>
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await MurViewModel.LoadAsync();
    }

    private async Task SavePage(Models.Mur mur)
    {
        await MurViewModel.SaveAsync(mur);
        await MurViewModel.LoadAsync(); // Recharge les données après sauvegarde
    }

    private void EditPage(Models.Mur mur)
    {
        MurViewModel.Edit(mur);
    }

    private async Task DeletePage(int idMur)
    {
        Console.WriteLine("supprime bonsant");
        await MurViewModel.DeleteAsync(idMur);
        await MurViewModel.LoadAsync(); // Recharge les données après suppression
    }


    private async Task AddPage()
    {
        await MurViewModel.AddAsync();
        await MurViewModel.LoadAsync(); // Recharge les données après ajout
    }

    private void test()
    {
        Console.WriteLine("ça marche");
    }
}
