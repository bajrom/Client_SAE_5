@page "/equipements"
@using Client_SAE_5.Models
@inject EquipementViewModel EquipementViewModel

<PageTitle>Liste des Équipements</PageTitle>

<h1>Liste des Équipements</h1>

@if (EquipementViewModel.Equipements == null || EquipementViewModel.TypeEquipements == null || EquipementViewModel.Salles == null)
{
    <p><em>Chargement...</em></p>
}
else if (EquipementViewModel.TypeEquipements.Count == 0 || EquipementViewModel.Salles.Count == 0)
{
    <p><em>Aucune Salle ou de type d'équipement disponible.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nom de l'équipement</th>
                <th>longeur</th>
                <th>largeur</th>
                <th>hauteur</th>
                <th>X équipement</th>
                <th>Y équipement</th>
                <th>Z équipement</th>
                <th>est actif ?</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var equipement in EquipementViewModel.Equipements)
            {
                <tr>
                    <td>@equipement.IdEquipement</td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input @bind="equipement.NomEquipement" />
                        }
                        else
                        {
                            <span>@equipement.NomEquipement</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.Longeur" />
                        }
                        else
                        {
                            <span>@equipement.Longeur</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.Largeur" />
                        }
                        else
                        {
                            <span>@equipement.Largeur</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.Hauteur" />
                        }
                        else
                        {
                            <span>@equipement.Hauteur</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.XEquipement" />
                        }
                        else
                        {
                            <span>@equipement.XEquipement</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.YEquipement" />
                        }
                        else
                        {
                            <span>@equipement.YEquipement</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.ZEquipement" />
                        }
                        else
                        {
                            <span>@equipement.ZEquipement</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <input type="number" @bind="equipement.EstActif" />
                        }
                        else
                        {
                            <span>@equipement.EstActif</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <select @bind="equipement.IdSalle">
                                @foreach (var salle in EquipementViewModel.Salles)
                                {
                                    <option value="@salle.IdSalle">@salle.NomSalle</option>
                                }
                            </select>
                        }
                        else
                        {
                            <span>@EquipementViewModel.Salles.FirstOrDefault(m => m.IdSalle == equipement.IdSalle)?.NomSalle</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <select @bind="equipement.IdTypeEquipement">
                                @foreach (var typeEquipement in EquipementViewModel.TypeEquipements)
                                {
                                    <option value="@typeEquipement.IdTypeEquipement">@typeEquipement.NomTypeEquipement</option>
                                }
                            </select>
                        }
                        else
                        {
                            <span>@EquipementViewModel.TypeEquipements.FirstOrDefault(t => t.IdTypeEquipement == equipement.IdTypeEquipement)?.NomTypeEquipement</span>
                        }
                    </td>
                    <td>
                        @if (equipement.IsEditable)
                        {
                            <button class="btn btn-success" @onclick="() => SavePage(equipement)">Valider</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" @onclick="() => EditPage(equipement)">Modifier</button>
                        }
                        <button class="btn btn-danger" @onclick="() => DeletePage(equipement.IdEquipement)">Supprimer</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Ajouter une nouveaux équipement</h2>
    <div>
        <input type="text" @bind="EquipementViewModel.NewEquipement.NomEquipement" placeholder="Nom de l'équipement" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.Longeur" placeholder="Longeur (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.Largeur" placeholder="Largeur (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.Hauteur" placeholder="Hauteur (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.XEquipement" placeholder="X équipement (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.YEquipement" placeholder="Y équipement (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.ZEquipement" placeholder="Z équipement (m)" />
        <input type="text" @bind="EquipementViewModel.NewEquipement.EstActif" placeholder="Est actif (OUI / NON / NSP)" />
        <select @bind="EquipementViewModel.NewEquipement.IdSalle">
            @foreach (var salle in EquipementViewModel.Salles)
            {
                <option value="@salle.IdSalle">@salle.NomSalle</option>
            }
        </select>
        <select @bind="EquipementViewModel.NewEquipement.IdTypeEquipement">
            @foreach (var typeEquipement in EquipementViewModel.TypeEquipements)
            {
                <option value="@typeEquipement.IdTypeEquipement">@typeEquipement.NomTypeEquipement</option>
            }
        </select>
        <button class="btn btn-primary" @onclick="AddPage">Ajouter</button>
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await EquipementViewModel.LoadAsync();
    }

    private async Task SavePage(Models.Equipement equipement)
    {
        await EquipementViewModel.SaveAsync(equipement);
        await EquipementViewModel.LoadAsync(); // Recharge les données après sauvegarde
    }

    private void EditPage(Models.Equipement equipement)
    {
        EquipementViewModel.Edit(equipement);
    }

    private async Task DeletePage(int idEquipement)
    {
        Console.WriteLine("supprime bonsant");
        await EquipementViewModel.DeleteAsync(idEquipement);
        await EquipementViewModel.LoadAsync(); // Recharge les données après suppression
    }


    private async Task AddPage()
    {
        await EquipementViewModel.AddAsync();
        await EquipementViewModel.LoadAsync(); // Recharge les données après ajout
    }

    private void test()
    {
        Console.WriteLine("ça marche");
    }
}
