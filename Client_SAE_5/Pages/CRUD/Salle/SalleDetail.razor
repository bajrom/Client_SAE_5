@page "/crud/salles/{idSalle:int}"
@using Client_SAE_5.Utils
@inject NavigationManager NavigationManager
@inject Client_SAE_5.ViewModel.SalleViewModel SalleViewModel

<link rel="stylesheet" href="css/DetailPages.css" />
<link rel="stylesheet" href="css/SalleStyle.css" />

<PageTitle>Détails de la salle</PageTitle>

<h3>Détails de la sallle</h3>
<br />
@if (SalleViewModel.SelectedSalleDetails == null)
{
    <p id="chargementPageContainer"><Spinner></Spinner> <p id="texteChargementDetail">Détails de la salle en chargement...</p></p>
}
else
{
    <div id="contentContainer">
        <div>
            <h5> Nom: @SalleViewModel.SelectedSalleDetails.NomSalle</h5>
            <p class="listeCliquable" @onclick='(e=>Utils.GoDetail(NavigationManager, "batiments", SalleViewModel.SelectedSalleDetails.Batiment.IdBatiment))'>
                <strong>Bâtiment:</strong> 
                @SalleViewModel.SelectedSalleDetails.Batiment.NomBatiment
            </p>

            <p class="listeCliquable" @onclick='(e=>Utils.GoDetail(NavigationManager, "typessalle", SalleViewModel.SelectedSalleDetails.TypeSalle.IdTypeSalle))'>
                <strong>Type:</strong> 
                @SalleViewModel.SelectedSalleDetails.TypeSalle.NomTypeSalle
            </p>

            <br />
            <h5>Capteurs</h5>
            @if (SalleViewModel.SelectedSalleDetails.Capteurs?.Count > 0)
            {
                <ul>
                    @foreach (var capteur in SalleViewModel.SelectedSalleDetails.Capteurs)
                    {
                        <li class="listeCliquable" @onclick='(e=>Utils.GoDetail(NavigationManager, "capteurs", capteur.IdCapteur))'>@capteur.NomCapteur</li>
                    }
                </ul>
            }
            else
            {
                <p><em>Aucun capteur associé</em></p>
            }

            <h5>Équipements</h5>
            @if (SalleViewModel.SelectedSalleDetails.Equipements?.Count > 0)
            {
                <ul>
                    @foreach (var equipement in SalleViewModel.SelectedSalleDetails.Equipements)
                    {
                        <li class="listeCliquable" @onclick='(e=>Utils.GoDetail(NavigationManager, "equipements", equipement.IdEquipement))'>@equipement.NomEquipement</li>
                    }
                </ul>
            }
            else
            {
                <p><em>Aucun équipement associé</em></p>
            }

            
        </div>

        <div>
            <h5>Plan de la Salle</h5>

            @if (SalleViewModel.SelectedSalleDetails?.Murs == null || SalleViewModel.SelectedSalleDetails.Murs.Count == 0)
            {
                <p><em>Aucun mur disponible pour cette salle</em></p>
            }
            else
            {
                <div id="schemaSalleContainer">
                    @((MarkupString)SVG_Generator.GenererPlanSalleSVG(SalleViewModel.SelectedSalleDetails.Murs
                    .OrderBy(m => m.Orientation)
                    .ToList()))

                </div>
            }
        </div>
    </div>
    
}

<Button class="btn btn-secondary mt-4" @onclick="GoBack">Retour</Button>

@code {
    [Parameter]
    public int IdSalle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await SalleViewModel.LoadSalleDetailsAsync(IdSalle);
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/crud/salles");
    }
}
