@page "/crud/equipements/{idEquipement:int}"
@inject NavigationManager NavigationManager
@inject Client_SAE_5.ViewModel.EquipementViewModel EquipementViewModel

<link rel="stylesheet" href="css/DetailPages.css" />

<PageTitle>Détails de l'équipement</PageTitle>

<h1>Détails de l'équipement</h1>
@if (EquipementViewModel.SelectedEquipementDetails == null)
{
    <p id="chargementPageContainer"><Spinner></Spinner> <p id="texteChargementDetail">Détails de l'équipement en chargement...</p></p>
}
else
{
    <h5>Nom de l'équipement: @EquipementViewModel.SelectedEquipementDetails.NomEquipement</h5>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Informations générales</h5>
            <p><strong>Nom :</strong> @EquipementViewModel.SelectedEquipementDetails.NomEquipement</p>
            <p><strong>Dimensions :</strong> @EquipementViewModel.SelectedEquipementDetails.Longueur cm x @EquipementViewModel.SelectedEquipementDetails.Largeur cm x @EquipementViewModel.SelectedEquipementDetails.Hauteur cm</p>
            <p><strong>Position :</strong> X: @EquipementViewModel.SelectedEquipementDetails.PositionX, Y: @EquipementViewModel.SelectedEquipementDetails.PositionY, Z: @EquipementViewModel.SelectedEquipementDetails.PositionZ</p>
            <p><strong>Etat :</strong> @(Utils.Utils.RenderEtatContent(EquipementViewModel.SelectedEquipementDetails.EstActif))</p>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Salle associée</h5>
            @if (EquipementViewModel.SelectedEquipementDetails.Salle != null)
            {
                <p>
                    <strong>Nom:</strong> 
                    <p class="listeCliquable" 
                        @onclick='(e=>Utils.Utils.GoDetail(NavigationManager, "salles", EquipementViewModel.SelectedEquipementDetails.Salle.IdSalle))'>
                        @EquipementViewModel.SelectedEquipementDetails.Salle.NomSalle
                    </p>
                </p>
            }
            else
            {
                <p class="text-muted">Aucune salle associée.</p>
            }
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Type d'équipement</h5>
            @if (EquipementViewModel.SelectedEquipementDetails.TypeEquipement != null)
            {
                <p>
                    <strong>Nom: </strong>
                    <p class="listeCliquable" 
                        @onclick='(e=>Utils.Utils.GoDetail(NavigationManager, "typesequipement", EquipementViewModel.SelectedEquipementDetails.TypeEquipement.IdTypeEquipement))'>
                        @EquipementViewModel.SelectedEquipementDetails.TypeEquipement.NomTypeEquipement
                    </p>
                </p>
            }
            else
            {
                <p class="text-muted">Aucun type associé.</p>
            }
        </div>
    </div>    
}

<button class="btn btn-secondary mt-4" @onclick="GoBack">Retour</button>

@code {
    [Parameter]
    public int IdEquipement { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await EquipementViewModel.LoadEquipementDetailsAsync(IdEquipement);
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/crud/equipements");
    }
}
