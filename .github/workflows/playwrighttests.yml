name: Blazor E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Ajouter un service si nécessaire, par exemple pour une base de données
      # services:
      #   redis:
      #     image: "redis:alpine"
      #     ports:
      #       - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: |
          dotnet restore

      - name: Build the project
        run: |
          dotnet build

      - name: Publish the Blazor app
        run: |
          dotnet publish -c Release -o ./publish

      # Démarrer l'application Blazor en arrière-plan
      - name: Start Blazor app
        run: |
          nohup dotnet ./publish/YourBlazorApp.dll > app.log 2>&1 &

      # Attendre que l'application Blazor démarre (vous pouvez ajuster le délai en fonction de votre projet)
      - name: Wait for the Blazor app to start
        run: |
          sleep 15  # Attendre que l'application démarre (ajustez la durée selon la vitesse de démarrage de votre app)

      # Installer Playwright et ses dépendances
      - name: Install Playwright dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      # Exécuter les tests Playwright
      - name: Run Playwright tests
        run: |
          dotnet test --filter "TestCategory=E2E"

      # Optionnel : arrêter l'application Blazor après les tests
      - name: Stop Blazor app
        run: |
          pkill dotnet
